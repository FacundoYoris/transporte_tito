<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Gestión de Envíos</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- DataTables CSS -->
  <link href="https://cdn.datatables.net/1.10.20/css/dataTables.bootstrap4.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

  <style>
    /* Evitar que el menú fijo cubra el contenido */
    body {
      background-color: #f4f6f9;
      font-family: Arial, sans-serif;
      padding-top: 70px;
      /* Ajusta este valor según la altura de tu menú */
    }

    /* Tarjetas con sombra y bordes redondeados */
    .card {
      border-radius: 10px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      background-color: #fff;
      height: 450px;
      /* Altura fija para que ambas tablas tengan el mismo tamaño */
    }

    .card-header {
      background-color: #343a40;
      color: #fff;
      font-size: 1.2rem;
      text-align: center;
      border-radius: 10px 10px 0 0;
      padding: 10px;
    }

    /* Contenedor de tablas con altura fija */
    .table-container {
      height: calc(100% - 50px);
      /* Se resta el alto del header y padding */
      overflow-y: auto;
    }

    .table th,
    .table td {
      text-align: center;
      vertical-align: middle;
    }

    .table tbody tr {
      cursor: pointer;
    }

    /* Resaltado de filas */
    .prioridad-alta {
      background-color: #f8d7da !important;
    }

    .selected {
      background-color: #ffc107 !important;
    }

    /* Botones para transferir filas */
    .btn-accion {
      width: 60px;
      height: 60px;
      font-size: 1.8rem;
      border-radius: 50%;
      display: flex;
      justify-content: center;
      align-items: center;
      margin-bottom: 10px;
    }

    /* Formulario central: campos en columna, con espacio entre ellos */
    .form-container {
      padding: 15px;
    }

    .form-container .form-label {
      font-weight: bold;
    }

    .hidden {
      display: none !important;
    }
  </style>
  <%- include('partes/header.ejs') %>
</head>

<body>
  <!-- Menú de navegación (incluir el header según corresponda) -->
  <div id="menu">
    <%- include('partes/navegacion.ejs') %>
  </div>

  <!-- Contenedor Fluido para ocupar todo el ancho -->
  <main class="container-fluid my-4">

    <!-- Fila 1: Formulario para completar datos del camión y chofer -->
    <div class="row mb-3">
  <div class="col-12">
    <div class="card p-2 border-0 shadow-sm" style="height: 140px; background-color: lemonchiffon;">
      <div class="row g-2 align-items-end justify-content-center text-center">

        <!-- SELECT CHOFER -->
        <div class="col-md-3">
          <label for="chofer" class="form-label"><strong>CHOFER</strong></label>
          <select id="chofer" name="dniChofer" class="form-select form-select-sm text-center">
            <option value="" disabled selected>Seleccione un chofer</option>
            <% choferes.forEach(c => { %>
              <option value="<%= c.dnichof %>"><%= c.nomchof %></option>
            <% }) %>
          </select>
        </div>

        <!-- SELECT DNI -->
        <div class="col-md-3">
          <label for="dni" class="form-label"><strong>DNI</strong></label>
          <select id="dni" name="dni" class="form-select form-select-sm text-center">
            <option value="" disabled selected>Seleccione un DNI</option>
            <% choferes.forEach(c => { %>
              <option value="<%= c.dnichof %>"><%= c.dnichof %></option>
            <% }) %>
          </select>
        </div>

        <!-- SELECT PATENTE CAMIÓN -->
        <div class="col-md-2">
          <label for="patenteCamion" class="form-label"><strong>PATENTE CAMIÓN</strong></label>
          <select id="patenteCamion" name="idCamion" class="form-select form-select-sm text-center">
            <option value="" disabled selected>Seleccione un camión</option>
            <% choferes.forEach(c => { %>
              <option value="<%= c.idcamion %>"><%= c.patente_camion %></option>
            <% }) %>
          </select>
        </div>

        <!-- SELECT PATENTE ACOPLADO -->
        <div class="col-md-2">
          <label for="patenteAcoplado" class="form-label"><strong>PATENTE ACOPLADO</strong></label>
          <select id="patenteAcoplado" name="patenteAcoplado" class="form-select form-select-sm text-center">
            <option value="" disabled selected>Seleccione un acoplado</option>
            <% choferes.forEach(c => { %>
              <option value="<%= c.idcamion %>"><%= c.patente_acoplado %></option>
            <% }) %>
          </select>
        </div>

      </div>
    </div>
  </div>
</div>


    <!-- Fila 2: Tablas y botones de transferencia -->
    <div class="row">
      <!-- Columna Izquierda: Tabla de Carga en Depósito -->
      <div class="col-md-5">
        <div class="card">
          <div class="card-header">CARGA EN DEPÓSITO</div>
          <div class="card-body p-0">
            <div class="table-container">
              <table id="tablaDepositos" class="table table-striped table-bordered">
                <thead>
                  <tr>
                    <th style="width: 35px;">ID</th>
                    <th>CLIENTE</th>
                    <th>PROVEEDOR</th>
                    <th style="width: 35px;">CANTIDAD</th>
                    <th style="width: 35px;">UNIDAD</th>
                    <th>REMITO</th>
                    <th>LOCALIDAD</th>
                    <th>VALOR</th>
                    <th>FECHA</th>
                  </tr>
                </thead>
                <tbody>
                  <% cargas.forEach(carga=> { %>
                    <tr class="<%= carga.prioridad == 1 ? 'prioridad-alta' : '' %>">
                      <td>
                        <%= carga.id %>
                      </td>
                      <td>
                        <%= carga.nomclie %>
                      </td>
                      <td>
                        <%= carga.nomproveedor %>
                      </td>
                      <td>
                        <%= carga.cantidad %>
                      </td>
                      <td>
                        <%= carga.unidad %>
                      </td>
                      <td>
                        <%= carga.remito %>
                      </td>
                      <td>
                        <%= carga.locclie %>
                      </td>
                      <td>
                        <%= carga.valordeclarado %>
                      </td>
                      <td>
                        <%= new Date(carga.fecha).toLocaleString('es-ES', { day: '2-digit' , month: '2-digit' ,
                          year: 'numeric' , hour: '2-digit' , minute: '2-digit' }) %>
                      </td>
                    </tr>
                    <% }); %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>

      <!-- Columna Central: Botones para transferir filas -->
      <div class="col-md-2 d-flex flex-column align-items-center justify-content-center">
        <button type="button" id="pasarDatos" class="btn btn-primary btn-accion">→</button>
        <button type="button" id="quitarDatos" class="btn btn-secondary btn-accion">←</button>
        <button type="button" id="enviarDatos" class="btn btn-success">Guardar Envío</button>
      </div>

      <!-- Columna Derecha: Tabla de Cargas Seleccionadas -->
      <div class="col-md-5">
        <div class="card">
          <div class="card-header">CARGAS SELECCIONADAS</div>
          <div class="card-body p-0">
            <div class="table-container">
              <table id="tablaSeleccionados" class="table table-striped table-bordered">
                <thead>
                  <tr>
                    <th style="width: 35px;">ID</th>
                    <th>CLIENTE</th>
                    <th>PROVEEDOR</th>
                    <th style="width: 35px;">CANTIDAD</th>
                    <th style="width: 35px;">UNIDAD</th>
                    <th>REMITO</th>
                    <th>LOCALIDAD</th>
                    <th>VALOR</th>
                    <th>FECHA</th>
                    <th style="width: 25px;">Acción</th>
                  </tr>
                </thead>
                <tbody></tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
  <script id="choferesData" type="application/json">
    <%- JSON.stringify(choferes) %>
  </script>

  <!-- Scripts: jQuery, DataTables y Bootstrap Bundle -->
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap4.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

  <!-- Esto maneja toda la lógica de las tablas, cargar datos dinamicamente y mandar al backend los datos -->
  <script>
$(document).ready(function () {
  let tablaDepositos = $('#tablaDepositos').DataTable({
    paging: false,
    info: false,
    searching: false
  });

  let tablaSeleccionados = $('#tablaSeleccionados').DataTable({
    paging: false,
    info: false,
    searching: false
  });

  // ✅ Transferir a Seleccionados
  $('#pasarDatos').click(function () {
    $('#tablaDepositos tbody tr.selected').each(function () {
      let datos = tablaDepositos.row(this).data();
      if (datos) {
        let prioridad = $(this).hasClass('prioridad-alta') ? 'prioridad-alta' : '';
        let nuevaFila = tablaSeleccionados.row.add([
          datos[0], datos[1], datos[2], datos[3], datos[4],
          datos[5], datos[6], datos[7], datos[8],
          '<button class="btn btn-danger btn-sm eliminarCarga">X</button>'
        ]).draw().node();
        $(nuevaFila).removeClass('selected').addClass(prioridad);
        tablaDepositos.row(this).remove().draw();
      }
    });
  });

  // ✅ Transferir a Depósitos
  $('#quitarDatos').click(function () {
    $('#tablaSeleccionados tbody tr.selected').each(function () {
      let datos = tablaSeleccionados.row(this).data();
      if (datos) {
        let prioridad = $(this).hasClass('prioridad-alta') ? 'prioridad-alta' : '';
        let nuevaFila = tablaDepositos.row.add([
          datos[0], datos[1], datos[2], datos[3], datos[4],
          datos[5], datos[6], datos[7], datos[8]
        ]).draw().node();
        $(nuevaFila).addClass(prioridad);
        tablaSeleccionados.row(this).remove().draw();
      }
    });
  });

  // ✅ Doble clic para mover a Seleccionados
  $('#tablaDepositos tbody').on('dblclick', 'tr', function () {
    let datos = tablaDepositos.row(this).data();
    if (datos) {
      let prioridad = $(this).hasClass('prioridad-alta') ? 'prioridad-alta' : '';
      let nuevaFila = tablaSeleccionados.row.add([
        datos[0], datos[1], datos[2], datos[3], datos[4],
        datos[5], datos[6], datos[7], datos[8],
        '<button class="btn btn-danger btn-sm eliminarCarga">X</button>'
      ]).draw().node();
      $(nuevaFila).removeClass('selected').addClass(prioridad);
      tablaDepositos.row(this).remove().draw();
    }
  });

  // ✅ Doble clic para devolver a Depósitos
  $('#tablaSeleccionados tbody').on('dblclick', 'tr', function () {
    let datos = tablaSeleccionados.row(this).data();
    if (datos) {
      let prioridad = $(this).hasClass('prioridad-alta') ? 'prioridad-alta' : '';
      let nuevaFila = tablaDepositos.row.add([
        datos[0], datos[1], datos[2], datos[3], datos[4],
        datos[5], datos[6], datos[7], datos[8]
      ]).draw().node();
      $(nuevaFila).addClass(prioridad);
      tablaSeleccionados.row(this).remove().draw();
    }
  });

  // ✅ Botón X para eliminar carga seleccionada
  $(document).on('click', '.eliminarCarga', function () {
    let fila = $(this).closest('tr');
    let datos = tablaSeleccionados.row(fila).data();
    if (datos) {
      let prioridad = fila.hasClass('prioridad-alta') ? 'prioridad-alta' : '';
      let nuevaFila = tablaDepositos.row.add([
        datos[0], datos[1], datos[2], datos[3], datos[4],
        datos[5], datos[6], datos[7], datos[8]
      ]).draw().node();
      $(nuevaFila).addClass(prioridad);
      tablaSeleccionados.row(fila).remove().draw();
    }
  });

  // ✅ Seleccionar filas (toggle)
  $('#tablaDepositos tbody, #tablaSeleccionados tbody').on('click', 'tr', function () {
    $(this).toggleClass('selected');
  });

  // ✅ Guardar envío y descargar PDF (dos pasos)
  $('#enviarDatos').click(function () {
    let cargasSeleccionadas = [];
    $('#tablaSeleccionados tbody tr').each(function () {
      let fila = tablaSeleccionados.row(this).data();
      if (fila) {
        cargasSeleccionadas.push({
          id: fila[0],
          cliente: fila[1],
          proveedor: fila[2],
          cantidad: fila[3],
          unidad: fila[4],
          remito: fila[5],
          localidad: fila[6],
          valor: fila[7],
          fecha: fila[8]
        });
      }
    });

    const envioData = {
      idCamion: $('#patenteCamion').val(),
      dniChofer: $('#chofer').val(),
      cargas: cargasSeleccionadas
    };

    if (!envioData.idCamion || !envioData.dniChofer || envioData.cargas.length === 0) {
      alert('⚠️ Debe seleccionar un camión, un chofer y al menos una carga.');
      return;
    }

    // ✅ Paso 1: Guardar envío
    fetch('/guardarEnvio', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(envioData)
    })
    .then(response => response.json())
    .then(data => {
      if (!data.success) throw new Error('Error al guardar el envío.');

      // ✅ Paso 2: Descargar PDF con nueva ruta
      const url = `/descargar/${data.idHojaRuta}`;
      const a = document.createElement('a');
      a.href = url;
      a.download = `Hoja_de_ruta_${data.idHojaRuta}.pdf`;
      document.body.appendChild(a);
      a.click();
      a.remove();

      alert('✅ Envío registrado y PDF descargado.');
      setTimeout(() => location.reload(), 500);
    })
    .catch(error => {
      console.error('Error:', error);
      alert('❌ Ocurrió un error al guardar el envío o descargar el PDF.');
    });
  });
});
</script>


  <!-- SCRIPT PARA LOS SELECTED DEL CHOFER Y DEL CAMION (AUTOCOMPLEMENTAR) -->
  <script>
    const choferes = JSON.parse(document.getElementById('choferesData').textContent);

    const $selectChofer = $('#chofer');
    const $selectDni = $('#dni');
    const $selectCamion = $('#patenteCamion');
    const $selectAcoplado = $('#patenteAcoplado');

    let campoIgnorado = null; // Campo que no debe ser modificado automáticamente

    // Permitir edición manual al hacer doble clic (ignora autocompletado)
    ['chofer', 'dni', 'patenteCamion', 'patenteAcoplado'].forEach(id => {
      document.getElementById(id).addEventListener('dblclick', function () {
        campoIgnorado = id;
        console.log(`Autocompletado desactivado para: ${id}`);
        this.classList.add('border-warning'); // visual opcional
      });
    });

    // Restaura estilo y autocompletado después de cambio manual
    function restaurarCampo() {
      campoIgnorado = null;
      ['chofer', 'dni', 'patenteCamion', 'patenteAcoplado'].forEach(id => {
        document.getElementById(id).classList.remove('border-warning');
      });
    }

    function completarCampos(chofer) {
      if (!chofer) return;

      if (campoIgnorado !== 'chofer') {
        $selectChofer.val(chofer.dnichof).trigger('change.select2');
      }
      if (campoIgnorado !== 'dni') {
        $selectDni.val(chofer.dnichof).trigger('change.select2');
      }
      if (campoIgnorado !== 'patenteCamion') {
        $selectCamion.val(chofer.idcamion).trigger('change.select2');
      }
      if (campoIgnorado !== 'patenteAcoplado') {
        $selectAcoplado.val(chofer.idcamion).trigger('change.select2');
      }
    }

    // Eventos de cambio con restauración de autocompletado
    $selectChofer.on('change', function () {
      const dni = $(this).val();
      const chofer = choferes.find(c => c.dnichof === dni);
      completarCampos(chofer);
      restaurarCampo();
    });

    $selectDni.on('change', function () {
      const dni = $(this).val();
      const chofer = choferes.find(c => c.dnichof === dni);
      completarCampos(chofer);
      restaurarCampo();
    });

    $selectCamion.on('change', function () {
      const idcamion = $(this).val();
      const chofer = choferes.find(c => c.idcamion == idcamion);
      completarCampos(chofer);
      restaurarCampo();
    });

    $selectAcoplado.on('change', function () {
      const idcamion = $(this).val();
      const chofer = choferes.find(c => c.idcamion == idcamion);
      completarCampos(chofer);
      restaurarCampo();
    });

    // Inicializar Select2 en todos los campos
    $('#chofer, #dni').select2({
      width: '100%',
      dropdownAutoWidth: true,
      placeholder: 'Seleccione una opción',
      allowClear: true
    });

    $('#patenteCamion, #patenteAcoplado').select2({
      width: '100%',
      dropdownAutoWidth: true,
      placeholder: 'Seleccione una opción',
      allowClear: true,
      tags: true // Habilita escritura manual
    });
  </script>


</body>

</html>